name: Docker Scout CVE Reusable Workflow

on:
  workflow_call:
    inputs:
      org_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      environment:
        required: false
        type: string
        default: "dev"
    secrets:
      docker_username:
        required: true
      docker_pat:
        required: true

permissions:
  contents: read
  security-events: write

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set image tag
        id: vars
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          TAG="build-${GITHUB_RUN_NUMBER}-${SHORT_SHA}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Docker login (if needed for private images)
        run: echo "${{ secrets.docker_pat }}" | docker login -u "${{ secrets.docker_username }}" --password-stdin

      - name: Set BASE_IMAGE
        id: set-base
        run: |
            ORG_NAME="${{ inputs.org_name }}"
            IMAGE_NAME="${{ inputs.image_name }}"
            IMAGE_TAG="${{ inputs.image_tag }}"

            if [ -n "$ORG_NAME" ]; then
            BASE_IMAGE="${ORG_NAME}/${IMAGE_NAME}:${IMAGE_TAG}"
            else
            BASE_IMAGE="${IMAGE_NAME}:${IMAGE_TAG}"
            fi

            echo "BASE_IMAGE=$BASE_IMAGE" >> $GITHUB_OUTPUT

      - name: Build custom Nginx image
        uses: docker/build-push-action@v6
        with:
            context: .
            tags: custom-nginx:${{ steps.vars.outputs.tag }}
            build-args: |
                BASE_IMAGE=${{ steps.set-base.outputs.BASE_IMAGE }}
            push: false  # Set to true if you want to push to a registry

      - name: Run Docker Scout CVE scan and generate SARIF
        uses: docker/scout-action@v1
        with:
            command: cves
            image: custom-nginx:${{ steps.vars.outputs.tag }}
            only-severities: critical,high
            format: sarif
            output: scout-results.sarif
            exit-code: true
            dockerhub-user: ${{ secrets.docker_username }}
            dockerhub-password: ${{ secrets.docker_pat }}

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
            sarif_file: scout-results.sarif